generator client {
  provider = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id              String   @id @default(cuid())
  username        String   @unique
  email           String   @unique
  password        String
  height          Int
  weight          Int
  bodyFat         Int
  goalWeight      Int      @map("goal_weight")
  goalBodyFat     Int      @map("goal_body_fat")
  calorieIntake   Int      @map("calorie_intake")
  
  workouts        Workout[]
  @@map("users")
}

model Workout {
  id            String     @id @default(cuid())
  name          String
  date          DateTime

  user          User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        String     @map("user_id")

  workoutExercise      WorkoutExercise[]
  @@map("workouts")
}

model WorkoutExercise {
  id                String      @id @default(cuid())

  workout           Workout     @relation(fields: [workoutId], references: [id], onDelete: Cascade)
  workoutId         String      @map("workout_id")

  exercise          Exercise?    @relation(fields: [exerciseId], references: [id], onDelete: SetNull)
  exerciseId        String?      @map("exercise_id")

  workoutExerciseSet WorkoutExerciseSet[]
  @@map("workouts_exercises")
}

model WorkoutExerciseSet {
  id                String      @id @default(cuid())
  reps              Int
  weight            Int

  workoutExercise   WorkoutExercise @relation(fields: [workoutExerciseId], references: [id], onDelete: Cascade)
  workoutExerciseId String   @map("workout_exercise_id")
  
  @@map("workouts_exercises_sets")
}

model Exercise {
  id                  String   @id @default(cuid())
  name                String
  image               String
  difficulty          String
  demonstrationGif    String   @map("demonstration_gif")
  description         String
  type                String

  workoutExercise     WorkoutExercise[]

  exerciseMuscle      ExerciseMuscle[]
  @@map("exercises")
}

model ExerciseMuscle {
  exercise        Exercise @relation(fields: [exerciseId], references: [id], onDelete: Cascade)
  exerciseId      String   @map("exercise_id")

  muscle          Muscle   @relation(fields: [muscleId], references: [id], onDelete: Cascade)
  muscleId        String   @map("muscle_id")

  @@id([exerciseId, muscleId])
  @@map("exercises_muscles")
}

model Muscle {
  id                String      @id @default(cuid())
  name              String
  muscleImg         String      @map("muscle_img")
  information       String

  exerciseMuscle    ExerciseMuscle[]
  @@map("muscles")
}

